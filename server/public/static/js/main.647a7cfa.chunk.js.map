{"version":3,"sources":["components/BookComponent.js","components/AuthorComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/DashBoardComponent.js","components/RegisterBookComponent.js","components/RegisterAuthorComponent.js","shared/baseUrl.js","redux/book/ActionCreators.js","redux/ActionTypes.js","redux/author/ActionCreators.js","components/MainComponent.js","redux/books.js","redux/authors.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Book","props","react_default","a","createElement","className","Breadcrumb","BreadcrumbItem","react_router_dom","to","active","Button","color","style","float","Label","htmlFor","Input","name","placeholder","marginRight","type","id","authors","map","author","key","Table","hover","books","book","isbn","title","publisher","Intl","DateTimeFormat","format","Date","parse","published","pages","concat","onClick","deleteBook","Author","dateBirth","email","deleteAuthor","Header","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isNavOpen","toggleNav","bind","assertThisInitialized","setState","Fragment","Navbar","dark","expand","NavbarToggler","Collapse","isOpen","navbar","Nav","NavItem","Component","Footer","DashBoard","href","RegisterBook","handleBlur","field","event","touched","objectSpread","defineProperty","website","handleSubmit","handleInputChange","handleDatePickerChange","console","log","JSON","stringify","newBook","toISOString","putBook","postBook","target","value","errors","length","test","validate","Form","onSubmit","FormGroup","valid","invalid","onBlur","onChange","FormFeedback","es","selected","marginLeft","RegisterAuthor","handleChange","newAuthor","putAuthor","postAuthor","split","filter","x","baseUrl","addBooks","payload","addBook","updateBook","removeBook","failedBooks","errmess","addAuthors","updateAuthor","addAuthor","removeAuthor","failedAuthors","Main","fetchBooks","fetchAuthors","HeaderComponent","react_router","location","path","component","BookComponent","errMess","AuthorComponent","DashBoardComponent","exact","RegisterBookComponent","RegisterAuthorComponent","_ref","match","parseInt","params","bookId","_ref2","authorId","FooterComponent","React","withRouter","connect","dispatch","fetch","then","response","ok","error","Error","status","statusText","message","json","catch","method","body","headers","Content-Type","credentials","Books","arguments","undefined","action","index","array","toConsumableArray","d","indexOf","splice","Authors","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","react_redux_es","MainComponent","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.647a7cfa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Table, Input, Label } from 'reactstrap';\r\n\r\nfunction Book(props) {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">   \r\n                <Breadcrumb className=\"col-12\">                        \r\n                    <BreadcrumbItem> <Link to='/dashboard'>DashBoard</Link> </BreadcrumbItem>\r\n                    <BreadcrumbItem active> Books </BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Books</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            \r\n            <Link to='/book'><Button color=\"primary\" style={{float: 'right'}}> Register Book </Button></Link>\r\n            <br />\r\n            <br />\r\n            \r\n            <div className=\"card card-body col-12\">\r\n                <div className=\"row col-12\">\r\n                    <Label className=\"form-label col-1\" htmlFor=\"published\">Name</Label>\r\n                    <Input name=\"bookname\" placeholder=\"Book name\" className=\"form-control col-2\" style={{marginRight: '10px'}} />\r\n                    \r\n                    <Label className=\"form-label col-2\" htmlFor=\"publisher\">Publisher</Label>\r\n                    <Input name=\"publisher\" placeholder=\"publisher\" className=\"form-control col-2\" style={{marginRight: '10px'}} />\r\n                                        \r\n                    <Label className=\"form-label col-1\" htmlFor=\"author\">Author</Label>\r\n                    <Input type=\"select\" id=\"author\" name=\"author\" className=\"form-control col-2\">\r\n                        {props.authors.map((author) => {\r\n                            return (<option key={author.id}>{author.name}</option>);\r\n                        })}     \r\n                    </Input> \r\n\r\n                    <Button color=\"primary\" className=\"col-1\" style={{float: 'right'}}> Search</Button>            \r\n                </div>            \r\n            </div>\r\n\r\n            <div className=\"row row-content col-12\">\r\n                <div className=\"col-12\"> \r\n                    <Table hover>\r\n                        <thead>\r\n                            <tr>                                \r\n                                <th>Title</th>                                            \r\n                                <th>Authors</th>\r\n                                <th>Publisher</th>\r\n                                <th>Published</th>\r\n                                <th>Pages</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {props.books.map((book) => {\r\n                                return (\r\n                                    <tr key={book.isbn}>                                \r\n                                        <td>{book.title}</td>                                                    \r\n                                        <td>{book.author}</td>\r\n                                        <td>{book.publisher}</td>\r\n                                        <td>{new Intl.DateTimeFormat('en-US').format(new Date(Date.parse(book.published)))}</td>\r\n                                        <td>{book.pages}</td>\r\n                                        <td>\r\n                                            <Link to={`/book/${book.id}`}><Button color=\"link\"> <span className=\"fa fa-pencil fa-lg\" /></Button></Link>\r\n                                            <Button color=\"link\" onClick={() => {props.deleteBook(book)}}> <span className=\"fa fa-trash fa-lg\" /> </Button>\r\n                                        </td>\r\n                                    </tr>\r\n                                );\r\n                            })}                                                       \r\n                        </tbody>\r\n                    </Table>                \r\n                </div>\r\n            </div>                \r\n        </div>\r\n    );      \r\n}\r\n\r\nexport default Book;","import React from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Table, Input } from 'reactstrap';\r\n\r\nfunction Author(props) {\r\n\r\n    return (\r\n        <div className=\"container\">                    \r\n            <div className=\"row align-items-start\">   \r\n                <Breadcrumb className=\"col-12\">                        \r\n                    <BreadcrumbItem> <Link to='/dashboard'>DashBoard</Link> </BreadcrumbItem>\r\n                    <BreadcrumbItem active> Authors </BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Authors</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            \r\n            <Link to='/author'><Button color=\"primary\" style={{float: 'right'}}> Register User </Button></Link>\r\n            <br />\r\n            <br />\r\n\r\n            <div className=\"card card-body col-12\">\r\n                <div className=\"row col-12\">\r\n                    <Input id=\"name\" name=\"name\" placeholder=\"Author Name\" className=\"form-control col-10\" style={{marginRight: '0px'}} />\r\n                    <Button color=\"primary\" className=\"col-2\"> Search</Button>            \r\n                </div>            \r\n            </div>\r\n            \r\n            <div className=\"row row-content col-12\">\r\n                                \r\n                <div className=\"col-12\">\r\n                    <Table hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Date of Birth</th>\r\n                                <th>Email</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {props.authors.map((author) => {\r\n                            return (\r\n                                <tr key={author.id}>\r\n                                    <td>{author.name}</td>\r\n                                    <td>{new Intl.DateTimeFormat('en-US').format(new Date(Date.parse(author.dateBirth)))}</td>\r\n                                    <td>{author.email}</td>\r\n                                    <td>\r\n                                        <Link to={`/author/${author.id}`}><Button color=\"link\"> <span className=\"fa fa-pencil fa-lg\" /> </Button></Link>\r\n                                        <Button color=\"link\" onClick={() => {props.deleteAuthor(author)}}> <span className=\"fa fa-trash fa-lg\" /> </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </div>            \r\n        </div>\r\n    );\r\n    \r\n}\r\n \r\nexport default Author;","import React, { Component } from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav, NavbarToggler, Collapse, NavItem } from 'reactstrap';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false, \r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(            \r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/dashboard'>\r\n                                        <span className=\"fa fa-tachometer fa-lg\"></span> Dashboard\r\n                                    </NavLink>\r\n                                </NavItem>\r\n\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/authors'>\r\n                                        <span className=\"fa fa-users fa-lg\"></span> Authors\r\n                                    </NavLink>\r\n                                </NavItem> \r\n\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/books'>\r\n                                        <span className=\"fa fa-book fa-lg\"></span> Books\r\n                                    </NavLink>\r\n                                </NavItem> \r\n\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/reports'>\r\n                                        <span className=\"fa fa-flag fa-lg\"></span> Reports\r\n                                    </NavLink>\r\n                                </NavItem>\r\n\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>             \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">                \r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2019 Manager Library</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction DashBoard(props) {\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">       \r\n                <div className=\"col-12\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n\r\n                <div className=\"col-12\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n                        1625, Avenue Guarabuava<br />\r\n                        DownTown<br />\r\n\t\t                Curitiba<br />\r\n\t\t                <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t                <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t                <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashBoard;  ","import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, FormFeedback, Label, Input} from 'reactstrap';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass RegisterBook extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            isbn: '',\r\n            title: '',\r\n            author: '',\r\n            publisher: '',\r\n            pages: '',\r\n            website: '',\r\n            published: new Date(),\r\n            touched: {\r\n                isbn: false,\r\n                title: false,                \r\n                pages: false,\r\n                website: false,            \r\n                publisher: false,\r\n            }\r\n        }\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleDatePickerChange = this.handleDatePickerChange.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        if (this.props.book) {            \r\n            this.setState({\r\n                id: this.props.book.id,\r\n                isbn: this.props.book.isbn,\r\n                title: this.props.book.title,\r\n                pages: this.props.book.pages,\r\n                author: this.props.book.author,\r\n                website: this.props.book.website,\r\n                publisher: this.props.book.publisher,\r\n                published: new Date(this.props.book.published)\r\n            });\r\n        }    \r\n    }\r\n\r\n    handleSubmit() {        \r\n        console.log('Current State is: ' + JSON.stringify(this.state));            \r\n        if (this.state.id) {\r\n            const newBook = {\r\n                id: this.state.id,\r\n                isbn: this.state.isbn,\r\n                title: this.state.title,\r\n                pages: this.state.pages,\r\n                author: this.state.author,\r\n                website: this.state.website,\r\n                publisher: this.state.publisher,\r\n                published: this.state.published.toISOString()\r\n            };\r\n            this.props.putBook(newBook);            \r\n        }\r\n        else {\r\n            const newBook = {                \r\n                isbn: this.state.isbn,\r\n                title: this.state.title,\r\n                pages: this.state.pages,\r\n                author: this.state.author,\r\n                website: this.state.website,\r\n                publisher: this.state.publisher,\r\n                published: this.state.published.toISOString()\r\n            };\r\n            this.props.postBook(newBook);\r\n        }\r\n    }\r\n    \r\n    handleBlur = (field) => (event) => {\r\n        this.setState({\r\n            touched: { ...this.setState.touched, [field]: true }\r\n        });        \r\n    }\r\n\r\n    handleInputChange(event) {        \r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    \r\n    handleDatePickerChange(published) {\r\n        this.setState({\r\n            published: published\r\n        });\r\n    }\r\n\r\n    validate(isbn, title, website, pages, publisher) {                \r\n        const errors = {\r\n            isbn: '',\r\n            title: '',                \r\n            pages: '',\r\n            website: '',     \r\n            publisher: '',\r\n        };\r\n        \r\n        if (this.state.touched.isbn && isbn.length < 1)\r\n            errors.name = 'ISBN should be >= 1 characters';        \r\n        else if (this.state.touched.isbn && isbn.length > 15)\r\n            errors.name = 'Name should be <= 15 characters';        \r\n\r\n        if (this.state.touched.title && title.length < 3)\r\n            errors.name = 'Name should be >= 3 characters';        \r\n        else if (this.state.touched.title && title.length > 30)\r\n            errors.name = 'Name should be <= 30 characters';        \r\n\r\n        if (this.state.touched.website && website.length < 3) \r\n            errors.name = 'Website should be >= 3 characters';        \r\n        else if (this.state.touched.website && website.length > 30)\r\n            errors.name = 'Website should be <= 30 characters';        \r\n\r\n        if (this.state.touched.publisher && publisher.length < 3) \r\n            errors.name = 'Publisher should be >= 3 characters';        \r\n        else if (this.state.touched.title && publisher.length > 30) \r\n            errors.name = 'Publisher should be <= 30 characters';        \r\n\r\n        const reg = /^\\d+$/;\r\n        if (this.state.touched.pages && !reg.test(pages))\r\n            errors.pages = 'Pages should contain only numbers';\r\n        \r\n\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.isbn, this.state.title, this.state.website, this.state.pages, this.state.publisher);\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">   \r\n                    <Breadcrumb className=\"col-12\">                        \r\n                        <BreadcrumbItem> <Link to='/books'>Book</Link> </BreadcrumbItem>\r\n                        <BreadcrumbItem active> Register Books </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Register Books</h3>\r\n                        <hr />\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"isbn\">ISBN</Label>\r\n                                <Input  id=\"isbn\" name=\"isbn\" placeholder=\"ISBN\" className=\"form-control\"\r\n                                        value={this.state.isbn}\r\n                                        valid={errors.isbn === ''}\r\n                                        invalid={errors.isbn !== ''}\r\n                                        onBlur={this.handleBlur('isbn')}\r\n                                        onChange={this.handleInputChange}/>\r\n                                <FormFeedback>{errors.isbn}</FormFeedback>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"title\">Title</Label>\r\n                                <Input  id=\"title\" name=\"title\" placeholder=\"Title\" className=\"form-control\"\r\n                                        value={this.state.title}\r\n                                        valid={errors.title === ''}\r\n                                        invalid={errors.title !== ''}\r\n                                        onBlur={this.handleBlur('title')}\r\n                                        onChange={this.handleInputChange}/>\r\n                                <FormFeedback>{errors.title}</FormFeedback>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"author\">Author</Label>\r\n                                <Input  id=\"author\" type=\"select\" name=\"author\" placeholder=\"Author\" className=\"form-control\"\r\n                                        value={this.state.author}\r\n                                        onBlur={this.handleBlur('author')}\r\n                                        onChange={this.handleInputChange}>\r\n                                    {this.props.authors.map((author) => {\r\n                                        return (<option key={author.id}>{author.name}</option>);\r\n                                    })}     \r\n                                </Input>  \r\n                            </FormGroup>\r\n                            \r\n                            <FormGroup>\r\n                                <Label htmlFor=\"publisher\">Publisher</Label>\r\n                                <Input  id=\"publisher\" name=\"publisher\" placeholder=\"Publisher\" className=\"form-control\"\r\n                                        value={this.state.publisher}\r\n                                        valid={errors.publisher === ''}\r\n                                        invalid={errors.publisher !== ''}\r\n                                        onBlur={this.handleBlur('publisher')}\r\n                                        onChange={this.handleInputChange}/>\r\n                                <FormFeedback>{errors.publisher}</FormFeedback>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"pages\">Pages</Label>\r\n                                <Input  id=\"pages\" name=\"pages\" placeholder=\"Pages\" className=\"form-control\"\r\n                                        value={this.state.pages}\r\n                                        valid={errors.pages === ''}\r\n                                        invalid={errors.pages !== ''}\r\n                                        onBlur={this.handleBlur('pages')}\r\n                                        onChange={this.handleInputChange}/>\r\n                                <FormFeedback>{errors.pages}</FormFeedback>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"website\">Website</Label>\r\n                                <Input  id=\"website\" name=\"website\" placeholder=\"Website\" className=\"form-control\"\r\n                                        value={this.state.website}\r\n                                        valid={errors.website === ''}\r\n                                        invalid={errors.website !== ''}\r\n                                        onBlur={this.handleBlur('website')}\r\n                                        onChange={this.handleInputChange}/>\r\n                                <FormFeedback>{errors.website}</FormFeedback>\r\n                            </FormGroup>\r\n                            \r\n                            <FormGroup>\r\n                                <Label className=\"form-label\" htmlFor=\"published\">Published</Label> <br />\r\n                                <DatePicker id=\"published\" className=\"form-control\" \r\n                                            selected={this.state.published} \r\n                                            onChange={this.handleDatePickerChange}/>                                \r\n                            </FormGroup>\r\n\r\n                            <div>\r\n                                <Link to=\"/books\"><Button color=\"primary\" className=\"col-2\" style={{marginLeft: '20px', float: 'right'}}>Cancel</Button></Link>\r\n                                <Link to=\"/books\"><Button onClick={this.handleSubmit} color=\"primary\" className=\"col-2\" style={{float: 'right'}}>Save</Button></Link>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n \r\nexport default RegisterBook;","import React, { Component } from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, FormFeedback, Label, Input } from 'reactstrap';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass RegisterAuthor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            name: '',\r\n            email: '',\r\n            dateBirth: new Date(),\r\n            touched: {\r\n                name: false,\r\n                email: false,\r\n                dateBirth: false,                \r\n            }\r\n        }\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.author) {            \r\n            this.setState({\r\n                id: this.props.author.id,\r\n                name: this.props.author.name, \r\n                email: this.props.author.email,\r\n                dateBirth: new Date(this.props.author.dateBirth)\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {        \r\n        console.log('Current State is: ' + JSON.stringify(this.state));     \r\n        if (this.state.id) {\r\n            const newAuthor = {\r\n                id: this.state.id, \r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                dateBirth: this.state.dateBirth.toISOString()      \r\n            };\r\n            this.props.putAuthor(newAuthor);            \r\n        }\r\n        else {\r\n            const newAuthor = {\r\n                name: this.state.name,\r\n                email: this.state.email,\r\n                dateBirth: this.state.dateBirth.toISOString()      \r\n            };\r\n            this.props.postAuthor(newAuthor);\r\n        }\r\n    }\r\n    \r\n    handleBlur = (field) => (event) => {\r\n        this.setState({\r\n            touched: { ...this.setState.touched, [field]: true }\r\n        });        \r\n    }\r\n\r\n    handleInputChange(event) {        \r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n    \r\n    handleChange(dateBirth) {\r\n        this.setState({\r\n            dateBirth: dateBirth\r\n        });\r\n    }\r\n\r\n    validate(name, email) {                \r\n        const errors = {\r\n            name: '',\r\n            email: '',\r\n        };\r\n        \r\n        if (this.state.touched.name && name.length < 3) {\r\n            errors.name = 'Name should be >= 3 characters';\r\n        }\r\n        else if (this.state.touched.name && name.length > 30) {\r\n            errors.name = 'Name should be <= 30 characters';\r\n        }\r\n            \r\n        if (this.state.touched.email && email.split('').filter(x => x === '@').length !== 1) {\r\n            errors.email = 'Email should contain a @';\r\n        } \r\n\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.name, this.state.email);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb className=\"col-12\">\r\n                        <BreadcrumbItem> <Link to='/authors'>Authors</Link> </BreadcrumbItem>\r\n                        <BreadcrumbItem active> Register Authors </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Register Authors</h3>\r\n                        <hr />\r\n                    </div>\r\n\r\n                    <div className=\"col-12\">\r\n                        <Form>\r\n                           \r\n                            <FormGroup>\r\n                                <Label htmlFor=\"name\">Name</Label>\r\n                                <Input id=\"name\" name=\"name\" placeholder=\"Name\" className=\"form-control\"\r\n                                       value={this.state.name}\r\n                                       valid={errors.name === ''}\r\n                                       invalid={errors.name !== ''}\r\n                                       onBlur={this.handleBlur('name')}\r\n                                       onChange={this.handleInputChange}\r\n                                />\r\n                                <FormFeedback>{errors.name}</FormFeedback>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"email\">Email</Label>\r\n                                <Input  id=\"email\" name=\"email\" placeholder=\"Email\" className=\"form-control\"\r\n                                        value={this.state.email}\r\n                                        valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onBlur={this.handleBlur('email')}\r\n                                        onChange={this.handleInputChange}\r\n                                />\r\n                                <FormFeedback>{errors.email}</FormFeedback>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"dateBirth\">Date of Birth</Label><br/>\r\n                                <DatePicker id=\"dateBirth\" className=\"form-control\" \r\n                                            selected={this.state.dateBirth} \r\n                                            onBlur={this.handleBlur('dateBirth')}\r\n                                            onChange={this.handleChange}/>                                \r\n                            </FormGroup>\r\n\r\n                            <div>\r\n                                <Link to=\"/authors\"><Button color=\"primary\" className=\"col-2\" style={{marginLeft: '20px', float: 'right'}}>Cancel</Button></Link>\r\n                                <Link to=\"/authors\"><Button onClick={this.handleSubmit} color=\"primary\" className=\"col-2\" style={{float: 'right'}}>Save</Button></Link>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default RegisterAuthor;","export const baseUrl = 'http://localhost:3001/';","import * as ActionTypes from '../ActionTypes';\r\n\r\nimport { baseUrl } from '../../shared/baseUrl';\r\n\r\nexport const fetchBooks = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'books')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(books => dispatch(addBooks(books)))\r\n        .catch(error => dispatch(failedBooks(error.message)));\r\n}\r\n\r\nexport const postBook = (book) => (dispatch) => {\r\n        \r\n    return fetch(baseUrl + 'books', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(book),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }        \r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addBook(response)))\r\n    .catch(error =>  { console.log('post books', error.message); });\r\n};\r\n\r\nexport const putBook = (book) => (dispatch) => {\r\n        \r\n    return fetch(`${baseUrl}books/${book.id}`, {\r\n        method: \"PUT\", \r\n        body: JSON.stringify(book),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"same-origin\",\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }        \r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(dispatch(updateBook(book)))\r\n    .catch(error =>  { console.log('delete book', error.message); });\r\n};\r\n\r\nexport const deleteBook = (book) => (dispatch) => {\r\n        \r\n    return fetch(`${baseUrl}books/${book.id}`, {method: \"DELETE\", credentials: \"same-origin\"})\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }        \r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(() => dispatch(removeBook(book)))\r\n    .catch(error =>  { console.log('delete book', error.message); });\r\n};\r\n\r\nexport const addBooks = (books) => ({\r\n    type: ActionTypes.ADD_BOOKS,\r\n    payload: books\r\n});\r\n\r\nexport const addBook = (book) => ({\r\n    type: ActionTypes.ADD_BOOK,\r\n    payload: book\r\n});\r\n\r\nexport const updateBook = (book) => ({\r\n    type: ActionTypes.UPDATE_BOOK,\r\n    payload: book\r\n});\r\n\r\nexport const removeBook = (book) => ({\r\n    type: ActionTypes.DELETE_BOOK,\r\n    payload: book\r\n});\r\n\r\nexport const failedBooks = (errmess) => ({\r\n    type: ActionTypes.FAILED_BOOKS,\r\n    payload: errmess\r\n});","export const ADD_BOOK = 'ADD_BOOK';\r\nexport const ADD_BOOKS = 'ADD_BOOKS';\r\nexport const UPDATE_BOOK = 'UPDATE_BOOK';\r\nexport const DELETE_BOOK = 'DELETE_BOOK';\r\nexport const FAILED_BOOKS = 'FAILED_BOOKS';\r\n\r\nexport const ADD_AUTHOR = 'ADD_AUTHOR';\r\nexport const ADD_AUTHORS = 'ADD_AUTHORS';\r\nexport const UPDATE_AUTHOR = 'UPDATE_AUTHOR';\r\nexport const DELETE_AUTHOR = 'DELETE_AUTHOR';\r\nexport const FAILED_AUTHORS = 'FAILED_AUTHORS';\r\n","import * as ActionTypes from '../ActionTypes';\r\n\r\nimport { baseUrl } from '../../shared/baseUrl';\r\n\r\nexport const fetchAuthors = () => (dispatch) => {\r\n    return fetch(baseUrl + 'authors')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(authors => dispatch(addAuthors(authors)))\r\n        .catch(error => dispatch(failedAuthors(error.message)));\r\n}\r\n\r\nexport const postAuthor = (author) => (dispatch) => {\r\n        \r\n    return fetch(baseUrl + 'authors', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(author),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }        \r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addAuthor(response)))\r\n    .catch(error =>  { console.log('post authors', error.message); });\r\n};\r\n\r\nexport const putAuthor = (author) => (dispatch) => {\r\n        \r\n    return fetch(`${baseUrl}authors/${author.id}`, {\r\n        method: \"PUT\", \r\n        body: JSON.stringify(author),\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        credentials: \"same-origin\",\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }        \r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(dispatch(updateAuthor(author)))\r\n    .catch(error =>  { console.log('delete author', error.message); });\r\n};\r\n\r\nexport const deleteAuthor = (author) => (dispatch) => {\r\n        \r\n    return fetch(`${baseUrl}authors/${author.id}`, {method: \"DELETE\", credentials: \"same-origin\"})\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }        \r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(() => dispatch(removeAuthor(author)))\r\n    .catch(error =>  { console.log('delete author', error.message); });\r\n};\r\n\r\nexport const addAuthors = (authors) => ({\r\n    type: ActionTypes.ADD_AUTHORS,\r\n    payload: authors\r\n});\r\n\r\nexport const updateAuthor = (author) => ({\r\n    type: ActionTypes.UPDATE_AUTHOR,\r\n    payload: author\r\n});\r\n\r\nexport const addAuthor = (author) => ({\r\n    type: ActionTypes.ADD_AUTHOR,\r\n    payload: author\r\n});\r\n\r\nexport const removeAuthor = (author) => ({\r\n    type: ActionTypes.DELETE_AUTHOR,\r\n    payload: author\r\n});\r\n\r\nexport const failedAuthors = (errmess) => ({\r\n    type: ActionTypes.FAILED_AUTHORS,\r\n    payload: errmess\r\n});","import React from 'react';\r\nimport Book from './BookComponent';\r\nimport Author from './AuthorComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport DashBoard from './DashBoardComponent';\r\nimport RegisterBook from './RegisterBookComponent'\r\nimport RegisterAuthor from './RegisterAuthorComponent'\r\n\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { fetchBooks, putBook, postBook, deleteBook } from '../redux/book/ActionCreators';\r\nimport { fetchAuthors, putAuthor, postAuthor, deleteAuthor } from '../redux/author/ActionCreators';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        books: state.books,\r\n        authors: state.authors\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    fetchBooks: () => { dispatch(fetchBooks())},\r\n    fetchAuthors: () => { dispatch(fetchAuthors())},\r\n    \r\n    putBook: (book)=> {dispatch(putBook(book))},\r\n    postBook: (book)=> {dispatch(postBook(book))},\r\n    deleteBook: (book) => {dispatch(deleteBook(book))},\r\n    \r\n    putAuthor: (author)=> {dispatch(putAuthor(author))},\r\n    postAuthor: (author)=> {dispatch(postAuthor(author))},\r\n    deleteAuthor: (author) => {dispatch(deleteAuthor(author))}\r\n})\r\n\r\nclass Main extends React.Component {\r\n    \r\n    componentDidMount() {\r\n        this.props.fetchBooks();\r\n        this.props.fetchAuthors();\r\n    }\r\n\r\n    render() {\r\n        \r\n        const BookWithId = ({match}) => {\r\n            return (\r\n                <RegisterBook book={this.props.books.books.filter((book) => parseInt(book.id, 10) === parseInt(match.params.bookId, 10))[0]}\r\n                              authors={this.props.authors.authors} putBook={this.props.putBook} postBook={this.props.postBook}\r\n                              errMess={this.props.books.errMess}                             \r\n                />                            \r\n            );\r\n        }\r\n\r\n        const AuthorWithId = ({match}) => {            \r\n            return (\r\n                <RegisterAuthor author={this.props.authors.authors.filter((author) => parseInt(author.id, 10) === parseInt(match.params.authorId, 10))[0]} \r\n                                errMess={this.props.authors.errMess} postAuthor={this.props.postAuthor} putAuthor={this.props.putAuthor}                            \r\n                />                            \r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />                             \r\n                <Switch location={this.props.location}>\r\n                    <Route path='/books' component={() => <Book books={this.props.books.books} errMess={this.props.books.errMess} authors={this.props.authors.authors} deleteBook={this.props.deleteBook} />} />\r\n                    <Route path='/authors' component={() => <Author authors={this.props.authors.authors} errMess={this.props.authors.errMess} deleteAuthor={this.props.deleteAuthor} />} />\r\n                    <Route path='/dashboard' component={() => <DashBoard />} />                    \r\n                    <Route exact path='/book' component={() => <RegisterBook authors={this.props.authors.authors} postBook={this.props.postBook} />} />} />\r\n                    <Route exact path='/author' component={() => <RegisterAuthor postAuthor={this.props.postAuthor}/>} />} />\r\n                    <Route exact path='/book/:bookId' component={BookWithId} />\r\n                    <Route exact path='/author/:authorId' component={AuthorWithId} />\r\n                    <Redirect to=\"/dashboard\" />\r\n                </Switch>                                                  \r\n                <Footer />                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Books = (state = { errMess: null, books:[]}, action) => {\r\n            \r\n    switch (action.type) {\r\n        case ActionTypes.ADD_BOOKS:\r\n            return {...state, errMess: null, books: action.payload};\r\n\r\n        case ActionTypes.FAILED_BOOKS:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_BOOK:\r\n            return {...state, books: state.books.concat(action.payload)};\r\n\r\n        case ActionTypes.UPDATE_BOOK:\r\n            var array = [...state.books];\r\n            var index = array.map(function(d){ return d.id;}).indexOf(action.payload.id);\r\n\r\n            if (index !== -1) {\r\n                array[index] = action.payload;                \r\n            }\r\n            return {...state, books: array};\r\n\r\n        case ActionTypes.DELETE_BOOK:            \r\n            var array = [...state.books]; \r\n            var index = array.indexOf(action.payload)\r\n            if (index !== -1) {\r\n              array.splice(index, 1);\r\n            }\r\n\r\n            return {...state, books: array};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Authors = (state = { errMess: null, authors:[] }, action) => {\r\n            \r\n    switch (action.type) {\r\n        case ActionTypes.ADD_AUTHORS:\r\n            return {...state, errMess: null, authors: action.payload};\r\n\r\n        case ActionTypes.FAILED_AUTHORS:\r\n            return {...state, errMess: action.payload};\r\n\r\n        case ActionTypes.ADD_AUTHOR:\r\n            return {...state, authors: state.authors.concat(action.payload)};\r\n\r\n        case ActionTypes.UPDATE_AUTHOR:\r\n            var array = [...state.authors];\r\n            var index = array.map(function(d){ return d.id;}).indexOf(action.payload.id);\r\n\r\n            if (index !== -1) {\r\n                array[index] = action.payload;                \r\n            }\r\n            return {...state, authors: array};\r\n\r\n        case ActionTypes.DELETE_AUTHOR:            \r\n            var array = [...state.authors]; // make a separate copy of the array\r\n            var index = array.indexOf(action.payload)\r\n            if (index !== -1) {\r\n              array.splice(index, 1);\r\n            }\r\n\r\n            return {...state, authors: array};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\r\nimport Main from './components/MainComponent';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nimport './App.css';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends React.Component { \r\n    render() {\r\n        return (\r\n          <div>\r\n            <Provider store={store}>\r\n              <BrowserRouter>\r\n                <Main />\r\n              </BrowserRouter>            \r\n            </Provider>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import { Books } from './books'\r\nimport { Authors } from './authors'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => { \r\n    const store = createStore(\r\n        combineReducers({\r\n            books: Books,\r\n            authors: Authors\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import 'bootstrap-social/bootstrap-social.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}